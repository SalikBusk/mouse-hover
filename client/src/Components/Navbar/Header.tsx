import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Link } from "react-router-dom";
import { opacity, background } from "../Anim/Anim";
import Nav from "./Nav";

import { RxHamburgerMenu, RxCross2 } from "react-icons/rx";
import Container from "../Container";

const Logo = () => {
  return (
    <Link className="" to="/">
       <svg
      className="cursor-pointer"
      id="cursor-pointer"
      width="150"
      height="20"
      viewBox="0 0 839 104"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g className="fill-dark dark:fill-primary">
        <path d="M81.12 30.72C78.336 24.864 74.304 20.352 69.024 17.184C63.744 13.92 57.6 12.288 50.592 12.288C43.584 12.288 37.248 13.92 31.584 17.184C26.016 20.352 21.6 24.96 18.336 31.008C15.168 36.96 13.584 43.872 13.584 51.744C13.584 59.616 15.168 66.528 18.336 72.48C21.6 78.432 26.016 83.04 31.584 86.304C37.248 89.472 43.584 91.056 50.592 91.056C60.384 91.056 68.448 88.128 74.784 82.272C81.12 76.416 84.816 68.496 85.872 58.512H45.84V47.856H99.84V57.936C99.072 66.192 96.48 73.776 92.064 80.688C87.648 87.504 81.84 92.928 74.64 96.96C67.44 100.896 59.424 102.864 50.592 102.864C41.28 102.864 32.784 100.704 25.104 96.384C17.424 91.968 11.328 85.872 6.81599 78.096C2.39999 70.32 0.191986 61.536 0.191986 51.744C0.191986 41.952 2.39999 33.168 6.81599 25.392C11.328 17.52 17.424 11.424 25.104 7.104C32.784 2.688 41.28 0.48 50.592 0.48C61.248 0.48 70.656 3.12 78.816 8.4C87.072 13.68 93.072 21.12 96.816 30.72H81.12Z" />
        <path d="M170.014 102L146.11 60.96H130.27V102H117.166V1.632H149.566C157.15 1.632 163.534 2.928 168.718 5.52C173.998 8.112 177.934 11.616 180.526 16.032C183.118 20.448 184.414 25.488 184.414 31.152C184.414 38.064 182.398 44.16 178.366 49.44C174.43 54.72 168.478 58.224 160.51 59.952L185.71 102H170.014ZM130.27 50.448H149.566C156.67 50.448 161.998 48.72 165.55 45.264C169.102 41.712 170.878 37.008 170.878 31.152C170.878 25.2 169.102 20.592 165.55 17.328C162.094 14.064 156.766 12.432 149.566 12.432H130.27V50.448Z" />
        <path d="M250.279 103.008C240.967 103.008 232.471 100.848 224.791 96.528C217.111 92.112 211.015 86.016 206.503 78.24C202.087 70.368 199.879 61.536 199.879 51.744C199.879 41.952 202.087 33.168 206.503 25.392C211.015 17.52 217.111 11.424 224.791 7.104C232.471 2.688 240.967 0.48 250.279 0.48C259.687 0.48 268.231 2.688 275.911 7.104C283.591 11.424 289.64 17.472 294.056 25.248C298.472 33.024 300.68 41.856 300.68 51.744C300.68 61.632 298.472 70.464 294.056 78.24C289.64 86.016 283.591 92.112 275.911 96.528C268.231 100.848 259.687 103.008 250.279 103.008ZM250.279 91.632C257.287 91.632 263.575 90 269.143 86.736C274.807 83.472 279.224 78.816 282.392 72.768C285.656 66.72 287.288 59.712 287.288 51.744C287.288 43.68 285.656 36.672 282.392 30.72C279.224 24.672 274.856 20.016 269.288 16.752C263.72 13.488 257.383 11.856 250.279 11.856C243.175 11.856 236.839 13.488 231.271 16.752C225.703 20.016 221.287 24.672 218.023 30.72C214.855 36.672 213.271 43.68 213.271 51.744C213.271 59.712 214.855 66.72 218.023 72.768C221.287 78.816 225.703 83.472 231.271 86.736C236.935 90 243.271 91.632 250.279 91.632Z" />
        <path d="M444.123 1.632L415.035 102H400.347L377.019 21.216L352.827 102L338.283 102.144L310.203 1.632H324.171L346.059 86.736L370.251 1.632H384.939L407.979 86.448L430.011 1.632H444.123Z" />
        <path d="M547.11 50.304C550.758 50.88 554.07 52.368 557.046 54.768C560.118 57.168 562.518 60.144 564.246 63.696C566.07 67.248 566.982 71.04 566.982 75.072C566.982 80.16 565.686 84.768 563.094 88.896C560.502 92.928 556.71 96.144 551.718 98.544C546.822 100.848 541.014 102 534.294 102H496.854V1.632H532.854C539.67 1.632 545.478 2.784 550.278 5.088C555.078 7.296 558.678 10.32 561.078 14.16C563.478 18 564.678 22.32 564.678 27.12C564.678 33.072 563.046 38.016 559.782 41.952C556.614 45.792 552.39 48.576 547.11 50.304ZM509.958 44.976H531.99C538.134 44.976 542.886 43.536 546.246 40.656C549.606 37.776 551.286 33.792 551.286 28.704C551.286 23.616 549.606 19.632 546.246 16.752C542.886 13.872 538.038 12.432 531.702 12.432H509.958V44.976ZM533.142 91.2C539.67 91.2 544.758 89.664 548.406 86.592C552.054 83.52 553.878 79.248 553.878 73.776C553.878 68.208 551.958 63.84 548.118 60.672C544.278 57.408 539.142 55.776 532.71 55.776H509.958V91.2H533.142Z" />
        <path d="M597.982 1.632V65.136C597.982 74.064 600.142 80.688 604.462 85.008C608.878 89.328 614.974 91.488 622.75 91.488C630.43 91.488 636.43 89.328 640.75 85.008C645.166 80.688 647.374 74.064 647.374 65.136V1.632H660.478V64.992C660.478 73.344 658.798 80.4 655.438 86.16C652.078 91.824 647.518 96.048 641.758 98.832C636.094 101.616 629.71 103.008 622.606 103.008C615.502 103.008 609.07 101.616 603.31 98.832C597.646 96.048 593.134 91.824 589.774 86.16C586.51 80.4 584.878 73.344 584.878 64.992V1.632H597.982Z" />
        <path d="M714.162 103.008C707.538 103.008 701.586 101.856 696.306 99.552C691.122 97.152 687.042 93.888 684.066 89.76C681.09 85.536 679.554 80.688 679.458 75.216H693.426C693.906 79.92 695.826 83.904 699.186 87.168C702.642 90.336 707.634 91.92 714.162 91.92C720.402 91.92 725.298 90.384 728.85 87.312C732.498 84.144 734.322 80.112 734.322 75.216C734.322 71.376 733.266 68.256 731.154 65.856C729.042 63.456 726.402 61.632 723.234 60.384C720.066 59.136 715.794 57.792 710.418 56.352C703.794 54.624 698.466 52.896 694.434 51.168C690.498 49.44 687.09 46.752 684.21 43.104C681.426 39.36 680.034 34.368 680.034 28.128C680.034 22.656 681.426 17.808 684.21 13.584C686.994 9.36 690.882 6.09599 695.874 3.792C700.962 1.488 706.77 0.335999 713.298 0.335999C722.706 0.335999 730.386 2.688 736.338 7.392C742.386 12.096 745.794 18.336 746.562 26.112H732.162C731.682 22.272 729.666 18.912 726.114 16.032C722.562 13.056 717.858 11.568 712.002 11.568C706.53 11.568 702.066 13.008 698.61 15.888C695.154 18.672 693.426 22.608 693.426 27.696C693.426 31.344 694.434 34.32 696.45 36.624C698.562 38.928 701.106 40.704 704.082 41.952C707.154 43.104 711.426 44.448 716.898 45.984C723.522 47.808 728.85 49.632 732.882 51.456C736.914 53.184 740.37 55.92 743.25 59.664C746.13 63.312 747.57 68.304 747.57 74.64C747.57 79.536 746.274 84.144 743.682 88.464C741.09 92.784 737.25 96.288 732.162 98.976C727.074 101.664 721.074 103.008 714.162 103.008Z" />
        <path d="M821.286 102L779.958 56.208V102H766.854V1.632H779.958V48.144L821.43 1.632H837.99L792.486 51.888L838.422 102H821.286Z" />
      </g>
    </svg>
    </Link>
  );
};

const Header = () => {
  const [isActive, setIsActive] = useState(false);

  return (
    <div className="bg-primary dark:bg-dark fixed w-full box-border p-[10px] border-b-[1px]">
      <Container>
        <div className="flex justify-between uppercase text-[12px] font-[400] relative py-2">
          {/* logo - items-start */}
          <div>
            <Logo />
          </div>
          {/* nav (burger) - item-end */}
          <div
            onClick={() => {
              setIsActive(!isActive);
            }}
            className="flex items-center justify-center gap-[8px] cursor-pointer"
          >
            <div className="relative flex items-center">
              <motion.p className="m-0" variants={opacity}>
                {isActive ? (
                  <div className="cursor-pointer">
                    <RxCross2 size={20} />
                  </div>
                ) : (
                  <div className="cursor-pointer">
                    <RxHamburgerMenu size={20} />
                  </div>
                )}
              </motion.p>
            </div>
          </div>
        </div>
      </Container>
      <motion.div
        variants={background}
        initial="initial"
        animate={isActive ? "open" : "closed"}
        className="bg-black opacity-[0.5] h-screen w-full absolute left-0 top-[100%]"
      ></motion.div>
      <AnimatePresence mode="wait">{isActive && <Nav />}</AnimatePresence>
    </div>
  );
};

export default Header;
